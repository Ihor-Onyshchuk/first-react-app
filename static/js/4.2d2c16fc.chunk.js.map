{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/Dialogitem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","className","s","dialog","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+ICG9KC,EAA6B,SAAAC,GAAK,MAAK,CACzCC,OAAQD,EAAME,KAAKD,SAGRE,EAAmB,SAAAC,GAAc,IACtCC,EADqC,iLAGvC,OAAKC,KAAKC,MAAMN,OAGT,kBAACG,EAAcE,KAAKC,OAFlB,kBAAC,IAAD,CAAUC,GAAI,eAJgB,GACXC,IAAML,WAatC,OAJqCM,YAAQX,EAARW,CACnCL,K,+FCNWM,EARI,SAACJ,GAChB,OACI,yBAAKK,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASN,GAAI,YAAcD,EAAMQ,IAAKR,EAAMS,QCIzCC,EARC,SAACV,GACb,OACI,yBAAKK,UAAWC,IAAEK,SACbX,EAAMW,U,gCC2BbC,EAAcC,YAAiB,IAqB/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAnBL,SAAAf,GACrB,OACE,0BAAMiB,SAAUjB,EAAMkB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXZ,KAAM,iBACNa,YAAa,qBACbC,SAAU,CAACC,IAAUZ,MAIzB,6BACE,6CAUOa,EAnDC,SAAAzB,GACd,IAAIP,EAAQO,EAAM0B,YAEdC,EAAkBlC,EAAMmC,QAAQC,KAAI,SAAAC,GAAC,OACvC,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMD,GAAIsB,EAAEtB,QAE9BuB,EAAmBtC,EAAMuC,SAASH,KAAI,SAAAI,GAAC,OACzC,kBAAC,EAAD,CAAStB,QAASsB,EAAEtB,aAEDlB,EAAMyC,eAM3B,OACE,yBAAK7B,UAAWC,IAAEsB,SAChB,yBAAKvB,UAAWC,IAAE6B,cAAeR,GACjC,yBAAKtB,UAAWC,IAAE0B,UAChB,6BAAMD,IAER,kBAACjB,EAAD,CAAqBG,SAVL,SAAAmB,GAClBpC,EAAMqC,YAAYD,EAAOF,qB,wBCCdI,sBACbnC,aAfoB,SAAAV,GACpB,MAAO,CACLiC,YAAajC,EAAMiC,gBAIE,SAAAa,GACvB,MAAO,CACLF,YAAa,SAAAH,GACXK,EAASC,YAAmBN,SAOhCtC,IAFa0C,CAGbb","file":"static/js/4.2d2c16fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) {\n        return <Redirect to={\"/login\"} />;\n      }\n      return <Component {...this.props} />;\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n\n  return ConnectedAuthRedirectComponent;\n};\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './../Dialogs.module.css';\n\n\nconst DialogItem = (props) => {\n    return (\n        <div className={s.dialog}>\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\n        </div>\n    );  \n};\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Dialogs.module.css';\n\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>\n            {props.message}\n        </div> \n    );\n};\n\nexport default Message;","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./Dialogitem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../common/formsControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\n\nconst Dialogs = props => {\n  let state = props.dialogsPage;\n\n  let dialogsElements = state.dialogs.map(d => (\n    <DialogItem name={d.name} id={d.id} />\n  ));\n  let messagesElements = state.messages.map(m => (\n    <Message message={m.message} />\n  ));\n  let newMessageBody = state.newMessageBody;\n\n  let addNewMessage = values => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>{dialogsElements}</div>\n      <div className={s.messages}>\n        <div>{messagesElements}</div>\n      </div>\n      <AddMessageFormRedux onSubmit={addNewMessage} />\n    </div>\n  );\n};\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = props => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          name={\"newMessageBody\"}\n          placeholder={\"Enter your message\"}\n          validate={[required, maxLength50]}\n        />\n      </div>\n\n      <div>\n        <button>Send</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\n  AddMessageForm\n);\n\nexport default Dialogs;\n","import React from \"react\";\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: newMessageBody => {\n      dispatch(sendMessageCreator(newMessageBody));\n    }\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}